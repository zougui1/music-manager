{"version":3,"file":"populate.js","sourceRoot":"","sources":["../../src/scripts/populate.ts"],"names":[],"mappings":";;;AAAA,oBAAkB;AAClB,+CAAgD;AAChD,yCAAkC;AAClC,+CAAwC;AACxC,uCAAgC;AAEzB,KAAK,UAAU,IAAI,CAAC,IAAS;IAClC,MAAM,UAAU,GAAG,MAAM,+BAAgB,EAAE,CAAC;IAE5C,IAAI;QACF,MAAM,aAAa,EAAE,CAAC;QACtB,MAAM,gBAAgB,EAAE,CAAC;KAC1B;IAAC,OAAO,KAAK,EAAE;QACd,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;KACtB;YAAS;QACR,MAAM,UAAU,CAAC,KAAK,EAAE,CAAC;KAC1B;AACH,CAAC;AAXD,oBAWC;AAED,MAAM,aAAa,GAAG,KAAK,IAAmB,EAAE;IAC9C,MAAM,KAAK,GAAG,IAAI,iBAAK,EAAE,CAAC;IAC1B,MAAM,QAAQ,GAAG,IAAI,uBAAQ,EAAE,CAAC;IAEhC,MAAM,KAAK,CAAC,KAAK,EAAE,CAAC;IACpB,MAAM,QAAQ,CAAC,KAAK,EAAE,CAAC;AACzB,CAAC,CAAA;AAED,MAAM,gBAAgB,GAAG,KAAK,IAAmB,EAAE;IACjD,MAAM,OAAO,CAAC,GAAG,CAAC;QAChB,eAAe,CAAC,kBAAkB,EAAE,YAAY,CAAC;KAClD,CAAC,CAAC;AACL,CAAC,CAAA;AAED,MAAM,eAAe,GAAG,KAAK,EAAE,KAAa,EAAE,QAAgB,EAAiB,EAAE;IAC/E,MAAM,QAAQ,GAAG,IAAI,uBAAQ,EAAE,CAAC;IAChC,MAAM,WAAW,GAAG,IAAI,eAAI,EAAE,CAAC;IAC/B,MAAM,IAAI,GAAG,MAAM,WAAW,CAAC,KAAK,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC;IAEtD,IAAI,CAAC,IAAI,EAAE;QACT,OAAO,CAAC,GAAG,CAAC,SAAS,KAAK,aAAa,CAAC,CAAC;QACzC,OAAO;KACR;IAED,MAAM,aAAa,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;QAChD,OAAO;YACL,IAAI,EAAE,QAAQ,KAAK,EAAE;YACrB,IAAI,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE;SACtB,CAAC;IACJ,CAAC,CAAC,CAAC;IAEH,MAAM,SAAS,GAAU,EAAE,CAAC;IAE5B,KAAK,MAAM,YAAY,IAAI,aAAa,EAAE;QACxC,SAAS,CAAC,IAAI,CAAC,MAAM,QAAQ,CAAC,MAAM,CAAC,YAAY,CAAC,CAAC,CAAC;KACrD;IAED,MAAM,OAAO,CAAC,GAAG,CAAC;QAChB,gBAAgB,CAAC,IAAI,CAAC,EAAE,EAAE,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;KAC3C,CAAC,CAAC;AACL,CAAC,CAAA;AAED,MAAM,gBAAgB,GAAG,KAAK,EAAE,MAAc,EAAE,UAAkB,EAAiB,EAAE;IACnF,MAAM,KAAK,GAAG,IAAI,iBAAK,EAAE,CAAC;IAC1B,MAAM,QAAQ,GAAG,IAAI,uBAAQ,EAAE,CAAC;IAEhC,MAAM,MAAM,GAAG,MAAM,KAAK,CAAC,MAAM,CAAC;QAChC,KAAK,EAAE,OAAO;QACd,QAAQ,EAAE,KAAK;QACf,OAAO,EAAE,CAAC,WAAW,CAAC;QACtB,WAAW,EAAE,EAAE;QACf,QAAQ,EAAE,EAAE;QACZ,IAAI,EAAE,gBAAgB;QACtB,MAAM,EAAE,EAAE;QACV,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,gBAAgB;QAC3B,KAAK,EAAE,OAAO;QACd,IAAI,EAAE,EAAE,EAAE,EAAE,MAAM,EAAE;KACrB,CAAC,CAAC;IAEH,MAAM,QAAQ,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;AAC9C,CAAC,CAAA","sourcesContent":["import '../setup';\nimport { createConnection } from 'database-pkg';\nimport { Music } from 'music-pkg';\nimport { Playlist } from 'playlist-pkg';\nimport { User } from 'user-pkg';\n\nexport async function main(args: any): Promise<void> {\n  const connection = await createConnection();\n\n  try {\n    await clearDatabase();\n    await populateDatabase();\n  } catch (error) {\n    console.error(error);\n  } finally {\n    await connection.close();\n  }\n}\n\nconst clearDatabase = async (): Promise<void> => {\n  const music = new Music();\n  const playlist = new Playlist();\n\n  await music.clear();\n  await playlist.clear();\n}\n\nconst populateDatabase = async (): Promise<void> => {\n  await Promise.all([\n    populateForUser('zougui@gmail.com', 'nopassword'),\n  ]);\n}\n\nconst populateForUser = async (email: string, password: string): Promise<void> => {\n  const playlist = new Playlist();\n  const userService = new User();\n  const user = await userService.login(email, password);\n\n  if (!user) {\n    console.log(`user \"${email}\" not found`);\n    return;\n  }\n\n  const playlistsData = [1, 2, 3, 4, 5].map(order => {\n    return {\n      name: `some ${order}`,\n      user: { id: user.id },\n    };\n  });\n\n  const playlists: any[] = [];\n\n  for (const playlistData of playlistsData) {\n    playlists.push(await playlist.create(playlistData));\n  }\n\n  await Promise.all([\n    createUserMusics(user.id, playlists[0].id),\n  ]);\n}\n\nconst createUserMusics = async (userId: number, playlistId: number): Promise<void> => {\n  const music = new Music();\n  const playlist = new Playlist();\n\n  const _music = await music.create({\n    album: 'album',\n    approved: false,\n    artists: ['dArtagnan'],\n    correctness: 45,\n    duration: 45,\n    link: 'http://some.fo',\n    source: {},\n    tags: [],\n    thumbnail: 'http://some.fo',\n    title: 'Title',\n    user: { id: userId },\n  });\n\n  await playlist.addMusic(playlistId, _music);\n}\n"]}