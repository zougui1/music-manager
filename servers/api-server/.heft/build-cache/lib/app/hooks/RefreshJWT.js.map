{"version":3,"file":"RefreshJWT.js","sourceRoot":"","sources":["../../../src/app/hooks/RefreshJWT.ts"],"names":[],"mappings":";;;AAAA,qCAA0F;AAE1F,oCAAyC;AAElC,MAAM,UAAU,GAAG,GAAkB,EAAE;IAC5C,OAAO,WAAI,CAAC,GAAG,CAAC,EAAE;QAChB,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE;YACb,OAAO;SACR;QAED,OAAO,CAAC,QAAsB,EAAE,EAAE;YAChC,IAAI,gCAAyB,CAAC,QAAQ,CAAC,EAAE;gBACvC,OAAO;aACR;YAED,MAAM,QAAQ,GAAG,qBAAa,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YACzC,QAAQ,CAAC,SAAS,CAAC,eAAe,EAAE,QAAQ,CAAC,CAAC;QAChD,CAAC,CAAA;IACH,CAAC,CAAC,CAAC;AACL,CAAC,CAAA;AAfY,QAAA,UAAU,cAetB","sourcesContent":["import { Hook, HookDecorator, HttpResponse, isHttpResponseServerError } from '@foal/core';\n\nimport { generateToken } from '../utils';\n\nexport const RefreshJWT = (): HookDecorator => {\n  return Hook(ctx => {\n    if (!ctx.user) {\n      return;\n    }\n\n    return (response: HttpResponse) => {\n      if (isHttpResponseServerError(response)) {\n        return;\n      }\n\n      const newToken = generateToken(ctx.user);\n      response.setHeader('Authorization', newToken);\n    }\n  });\n}\n"]}