{"version":3,"file":"user.entity.js","sourceRoot":"","sources":["../../src/entities/user.entity.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,qCAAgF;AAChF,mDAAuC;AAEvC,+CAA2C;AAC3C,iDAAuC;AACvC,uDAA6C;AAG7C,IAAa,IAAI,GAAjB,MAAa,IAAK,SAAQ,wBAAU;IAmB3B,KAAK,CAAC,YAAY;QACvB,IAAI,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,EAAE;YACzD,OAAO;YACP,4CAA4C;SAC7C;IACH,CAAC;CACF,CAAA;AAtBC;IADC,gBAAM,CAAC,SAAS,EAAE,EAAE,MAAM,EAAE,sBAAK,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;;kCACpC;AAGrB;IADC,gBAAM,CAAC,SAAS,EAAE,EAAE,MAAM,EAAE,sBAAK,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;;mCACpC;AAGtB;IADC,gBAAM,CAAC,SAAS,CAAC;;sCACmB;AAGrC;IADC,mBAAS,CAAC,GAAG,EAAE,CAAC,0BAAQ,EAAE,QAAQ,CAAC,EAAE,CAAC,QAAQ,CAAC,IAAI,CAAC;;uCACvB;AAG9B;IADC,mBAAS,CAAC,GAAG,EAAE,CAAC,oBAAK,EAAE,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC;;oCACpB;AAIxB;IAFC,sBAAY,EAAE;IACd,sBAAY,EAAE;;;;wCAMd;AAxBU,IAAI;IADhB,gBAAM,EAAE;GACI,IAAI,CAyBhB;AAzBY,oBAAI","sourcesContent":["import { Column, Entity, OneToMany, BeforeInsert, BeforeUpdate } from 'typeorm';\nimport { rules } from 'validation-pkg';\n\nimport { BaseEntity } from './base.entity';\nimport { Music } from './music.entity';\nimport { Playlist } from './playlist.entity';\n\n@Entity()\nexport class User extends BaseEntity {\n\n  @Column('varchar', { length: rules.user.name.maxLength })\n  public name!: string;\n\n  @Column('varchar', { length: rules.user.email.maxLength })\n  public email!: string;\n\n  @Column('varchar')\n  public password?: string | undefined;\n\n  @OneToMany(() => Playlist, playlist => playlist.user)\n  public playlists!: Playlist[];\n\n  @OneToMany(() => Music, music => music.user)\n  public musics!: Music[];\n\n  @BeforeInsert()\n  @BeforeUpdate()\n  public async hashPassword(): Promise<void> {\n    if (this.password && !this.password.startsWith('$argon2')) {\n      // TODO\n      //this.password = await hash(this.password);\n    }\n  }\n}\n"]}