{"version":3,"file":"music.entity.js","sourceRoot":"","sources":["../../src/entities/music.entity.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,qCAA+D;AAC/D,mDAAuC;AAGvC,+CAA2C;AAC3C,+CAA2C;AAC3C,yEAAmE;AACnE,iEAA4D;AAG5D,IAAa,WAAW,GAAxB,MAAa,WAAY,SAAQ,wBAAU;CAwC1C,CAAA;AArCC;IADC,gBAAM,CAAC,SAAS,EAAE,EAAE,MAAM,EAAE,sBAAK,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;;0CACrC;AAGtB;IADC,gBAAM,CAAC,SAAS,EAAE,EAAE,MAAM,EAAE,sBAAK,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;;yCACrC;AAGrB;IADC,gBAAM,CAAC,cAAc,CAAC;;4CACG;AAG1B;IADC,gBAAM,CAAC,SAAS,EAAE,EAAE,MAAM,EAAE,sBAAK,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,EAAE,CAAC;;0CACrC;AAGtB;IADC,gBAAM,CAAC,aAAa,CAAC;;2CACU;AAGhC;IADC,gBAAM,CAAC,SAAS,EAAE,EAAE,MAAM,EAAE,sBAAK,CAAC,KAAK,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;;8CACrC;AAG1B;IADC,gBAAM,CAAC,cAAc,CAAC;;yCACA;AAGvB;IADC,gBAAM,CAAC,OAAO,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;;6CACX;AAGzB;IADC,gBAAM,CAAC,SAAS,CAAC;;6CACQ;AAG1B;IADC,gBAAM,CAAC,OAAO,CAAC;;gDACY;AAG5B;IADC,mBAAS,CAAC,GAAG,EAAE,CAAC,gDAAqB,EAAE,eAAe,CAAC,EAAE,CAAC,eAAe,CAAC,QAAQ,EAAE,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC;;qDAC3D;AAGlD;IADC,mBAAS,CAAC,GAAG,EAAE,CAAC,wBAAU,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,MAAM,CAAC;8BACnC,wBAAU;yCAAC;AAGzB;IADC,mBAAS,CAAC,GAAG,EAAE,CAAC,yCAAkB,EAAE,YAAY,CAAC,EAAE,CAAC,YAAY,CAAC,KAAK,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;;6CACpD;AAvC5B,WAAW;IADvB,gBAAM,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC;GACd,WAAW,CAwCvB;AAxCY,kCAAW","sourcesContent":["import { Column, Entity, OneToMany, ManyToOne } from 'typeorm';\nimport { rules } from 'validation-pkg';\nimport { Music } from 'types-pkg';\n\nimport { BaseEntity } from './base.entity';\nimport { UserEntity } from './user.entity';\nimport { PlaylistToMusicEntity } from './playlist-to-music.entity';\nimport { MusicPlayingEntity } from './music-playing.entity';\n\n@Entity({ name: 'musics' })\nexport class MusicEntity extends BaseEntity {\n\n  @Column('varchar', { length: rules.music.title.maxLength })\n  public title!: string;\n\n  @Column('varchar', { length: rules.music.link.maxLength })\n  public link!: string;\n\n  @Column('simple-array')\n  public artists?: string[];\n\n  @Column('varchar', { length: rules.music.album.maxLength })\n  public album?: string;\n\n  @Column('simple-json')\n  public source?: Music['source'];\n\n  @Column('varchar', { length: rules.music.thumbnail.maxLength })\n  public thumbnail?: string;\n\n  @Column('simple-array')\n  public tags!: string[];\n\n  @Column('float', { unsigned: true })\n  public duration!: number;\n\n  @Column('boolean')\n  public approved!: boolean;\n\n  @Column('float')\n  public correctness?: number;\n\n  @OneToMany(() => PlaylistToMusicEntity, playlistToMusic => playlistToMusic.playlist, { onDelete: 'CASCADE' })\n  public playlistToMusics!: PlaylistToMusicEntity[];\n\n  @ManyToOne(() => UserEntity, user => user.musics)\n  public user!: UserEntity;\n\n  @OneToMany(() => MusicPlayingEntity, musicPlaying => musicPlaying.music, { cascade: true })\n  public playings!: MusicPlayingEntity[];\n}\n"]}