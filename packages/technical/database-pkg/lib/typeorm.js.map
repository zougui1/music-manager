{"version":3,"file":"typeorm.js","sourceRoot":"","sources":["../src/typeorm.ts"],"names":[],"mappings":";;;;;;AAAA,qCAOiB;AACjB,gDAAwB;AAExB,yCAA4H;AAGrH,MAAM,mBAAmB,GAAG,CAAiD,IAA6B,EAAe,EAAE;IAChI,MAAM,UAAU,GAAG,uBAAa,EAAE,CAAC;IACnC,OAAO,UAAU,CAAC,mBAAmB,CAAC,IAAI,CAAC,CAAC;AAC9C,CAAC,CAAA;AAHY,QAAA,mBAAmB,uBAG/B;AAEM,MAAM,gBAAgB,GAAG,KAAK,IAAyB,EAAE;IAC9D,MAAM,UAAU,GAAG,cAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,cAAc,CAAC,CAAC;IAC5D,MAAM,MAAM,GAAsB,OAAO,CAAC,UAAU,CAAC,CAAC;IAEtD,IAAI,CAAC,MAAM,EAAE;QACX,MAAM,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC;KAC/C;IAED,OAAO,MAAM,0BAAuB,iCAC/B,MAAM,KACT,QAAQ,EAAE,CAAC,sBAAW,EAAE,6BAAkB,EAAE,yBAAc,EAAE,gCAAqB,EAAE,qBAAU,CAAC,IAC9F,CAAC;AACL,CAAC,CAAA;AAZY,QAAA,gBAAgB,oBAY5B","sourcesContent":["import {\n  getConnection,\n  createConnection as typeormCreateConnection,\n  ObjectType,\n  DeepPartial,\n  Connection,\n  ConnectionOptions,\n} from 'typeorm';\nimport path from 'path';\n\nimport { BaseEntity, MusicEntity, MusicPlayingEntity, PlaylistEntity, PlaylistToMusicEntity, UserEntity } from './entities';\nimport { BaseRepository } from './repositories';\n\nexport const getCustomRepository = <TRepository extends BaseRepository<BaseEntity>>(repo: ObjectType<TRepository>): TRepository => {\n  const connection = getConnection();\n  return connection.getCustomRepository(repo);\n}\n\nexport const createConnection = async (): Promise<Connection> => {\n  const configPath = path.join(process.cwd(), 'ormconfig.js');\n  const config: ConnectionOptions = require(configPath);\n\n  if (!config) {\n    throw new Error('Database config not found.');\n  }\n\n  return await typeormCreateConnection({\n    ...config,\n    entities: [MusicEntity, MusicPlayingEntity, PlaylistEntity, PlaylistToMusicEntity, UserEntity],\n  });\n}\n\nexport { ObjectType, DeepPartial };\n"]}