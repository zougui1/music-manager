{"version":3,"file":"ApiException.js","sourceRoot":"","sources":["../src/ApiException.ts"],"names":[],"mappings":";;;AAAA,2CAA4C;AAG5C,qDAAkD;AAElD,MAAa,YAAa,SAAQ,iBAAS;IAOzC,YAAY,KAA2C;;QACrD,KAAK,CAAC,MAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,OAAO,mCAAI,YAAY,CAAC,cAAc,EAAE,MAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,MAAM,mCAAI,YAAY,CAAC,aAAa,CAAC,CAAC;QAHpG,WAAM,GAAkB,EAAE,CAAC;QAKzB,sDAAsD;QACtD,uDAAuD;QACvD,IAAI,CAAC,IAAI,GAAG,MAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,IAAI,mCAAI,YAAY,CAAC,WAAW,CAAA;QACnD,IAAI,CAAC,MAAM,GAAG,MAAA,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,MAAM,mCAAI,EAAE,CAAC;IACpC,CAAC;IAED,+BAA+B;IAC/B,MAAM,CAAC,IAAI,CAAC,KAAU,EAAE,MAAkC;;QACxD,IAAI,CAAC,KAAK,EAAE;YACV,OAAO,IAAI,YAAY,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC;SACrC;QAED,KAAK,CAAC,MAAM,mCACP,CAAC,MAAA,KAAK,CAAC,MAAM,mCAAI,EAAE,CAAC,GACpB,CAAC,MAAM,aAAN,MAAM,cAAN,MAAM,GAAI,EAAE,CAAC,CAClB,CAAC;QAEF,IAAI,KAAK,YAAY,YAAY,EAAE;YACjC,OAAO,KAAK,CAAC;SACd;QAED,IAAI,KAAK,CAAC,OAAO,EAAE;YACjB,OAAO,YAAY,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;SACtC;QAED,IAAI,KAAK,CAAC,WAAW,EAAE;YACrB,OAAO,YAAY,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;SAC1C;QAED,OAAO,IAAI,YAAY,EAAE,CAAC;IAC5B,CAAC;IACD,YAAY;IAEZ,gCAAgC;IACxB,MAAM,CAAC,SAAS,CAAC,KAAU;QACjC,IAAI,KAAK,CAAC,MAAM,IAAI,KAAK,CAAC,IAAI,EAAE;YAC9B,IAAI,KAAK,CAAC,IAAI,EAAE;gBACd,KAAK,CAAC,OAAO,GAAG,+BAAc,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;aAC5C;YAED,OAAO,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC;SAChC;QAED,OAAO,IAAI,YAAY,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;IACzC,CAAC;IAEO,MAAM,CAAC,aAAa,CAAC,KAAU;QACrC,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC,WAAW,CAAC;QAClC,OAAO,IAAI,YAAY,CAAC,KAAK,CAAC,CAAC;IACjC,CAAC;IACD,YAAY;IAEZ,gBAAgB;IAChB,QAAQ;;QACN,OAAO;YACL,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,MAAM,EAAE,IAAI,CAAC,MAAM;YACnB,IAAI,EAAE,MAAA,IAAI,CAAC,IAAI,mCAAI,YAAY,CAAC,WAAW;YAC3C,MAAM,EAAE,IAAI,CAAC,MAAM;SACpB,CAAC;IACJ,CAAC;;AAtEH,oCAwEC;AAvEiB,2BAAc,GAAG,gBAAgB,CAAC;AAClC,0BAAa,GAAG,GAAG,CAAC;AACpB,wBAAW,GAAG,iBAAiB,CAAC","sourcesContent":["import { Exception } from '@poppinss/utils';\nimport { ObjectLiteral } from 'types-pkg';\n\nimport { convertMessage } from './convertMessage';\n\nexport class ApiException extends Exception {\n  static readonly defaultMessage = 'errors.unknown';\n  static readonly defaultStatus = 500;\n  static readonly defaultCode = 'E_UNKNOWN_ERROR';\n\n  values: ObjectLiteral = {};\n\n  constructor(error?: Partial<ApiErrorObject> | undefined) {\n    super(error?.message ?? ApiException.defaultMessage, error?.status ?? ApiException.defaultStatus);\n\n    // we don't give it to the `super` because `Exception`\n    // prepends the code to the message which we don't want\n    this.code = error?.code ?? ApiException.defaultCode\n    this.values = error?.values ?? {};\n  }\n\n  //#region public static methods\n  static from(value: any, values?: ObjectLiteral | undefined): ApiException {\n    if (!value) {\n      return new ApiException({ values });\n    }\n\n    value.values = {\n      ...(value.values ?? {}),\n      ...(values ?? {}),\n    };\n\n    if (value instanceof ApiException) {\n      return value;\n    }\n\n    if (value.message) {\n      return ApiException.fromError(value);\n    }\n\n    if (value.messageCode) {\n      return ApiException.fromErrorData(value);\n    }\n\n    return new ApiException();\n  }\n  //#endregion\n\n  //#region private static methods\n  private static fromError(value: any): ApiException {\n    if (value.status || value.code) {\n      if (value.code) {\n        value.message = convertMessage(value.code);\n      }\n\n      return new ApiException(value);\n    }\n\n    return new ApiException(value.message);\n  }\n\n  private static fromErrorData(value: any): ApiException {\n    value.message = value.messageCode;\n    return new ApiException(value);\n  }\n  //#endregion\n\n  //#region public\n  toObject(): ApiErrorObject {\n    return {\n      message: this.message,\n      status: this.status,\n      code: this.code ?? ApiException.defaultCode,\n      values: this.values,\n    };\n  }\n  //#endregion\n}\n\nexport interface ApiErrorObject {\n  message: string;\n  status: number;\n  code: string;\n  values: ObjectLiteral;\n}\n"]}