{"version":3,"file":"ffmpeg.js","sourceRoot":"","sources":["../src/ffmpeg.ts"],"names":[],"mappings":";;;;;;AACA,kEAA+E;AAI/E,SAAgB,MAAM,CAAC,cAAyD,EAAE,OAA8B;IAC9G,MAAM,OAAO,GAAG,uBAAS,CAAC,cAA0B,EAAE,OAAO,CAAC,CAAC;IAE/D,MAAM,OAAO,GAAG,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,EAAE,EAAE;QAC9C,OAAO,CAAC,EAAE,CAAC,KAAK,EAAE,OAAO,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;IACjD,CAAC,CAAC,CAAC;IAEH,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC;IAE1B,OAAO,OAAO,CAAC;AACjB,CAAC;AAVD,wBAUC","sourcesContent":["import { Readable } from 'stream';\nimport ffmpegLib, { FfmpegCommandOptions, FfmpegCommand } from 'fluent-ffmpeg';\n\nexport function ffmpeg(options?: FfmpegCommandOptions): FfmpegCommand;\nexport function ffmpeg(input?: string | Readable, options?: FfmpegCommandOptions): FfmpegCommand;\nexport function ffmpeg(inputOrOptions?: FfmpegCommandOptions | string | Readable, options?: FfmpegCommandOptions): FfmpegCommand {\n  const command = ffmpegLib(inputOrOptions as Readable, options);\n\n  const promise = new Promise((resolve, reject) => {\n    command.on('end', resolve).on('error', reject);\n  });\n\n  command.promise = promise;\n\n  return command;\n}\n\ndeclare module 'fluent-ffmpeg' {\n  interface FfmpegCommand {\n    promise: Promise<any>;\n  }\n}\n"]}