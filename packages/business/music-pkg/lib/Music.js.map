{"version":3,"file":"Music.js","sourceRoot":"","sources":["../src/Music.ts"],"names":[],"mappings":";;;AAAA,+CAA4I;AAE5I,MAAa,KAAM,SAAQ,iCAAmC;IAE5D;QACE,KAAK,CAAC,8BAAe,CAAC,CAAC;IACzB,CAAC;IAED,gBAAgB;IACT,KAAK,CAAC,QAAQ,CAAC,QAA2B;QAC/C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IACvE,CAAC;IAEM,KAAK,CAAC,QAAQ,CAAC,EAAU;QAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;IAC/B,CAAC;IAEM,KAAK,CAAC,MAAM,CAAC,KAA+B;QACjD,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,CAAC;IACxC,CAAC;IAEM,KAAK,CAAC,KAAK;QAChB,MAAM,IAAI,CAAC,OAAO,CAAC,qCAAsB,CAAC,CAAC,SAAS,EAAE,CAAC;QACvD,MAAM,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;IAC9B,CAAC;CAEF;AAxBD,sBAwBC","sourcesContent":["import { RepositoryAccessor, MusicEntity, MusicRepository, MusicPlayingRepository, PlaylistToMusicEntity, DeepPartial } from 'database-pkg';\n\nexport class Music extends RepositoryAccessor<MusicRepository> {\n\n  constructor() {\n    super(MusicRepository);\n  }\n\n  //#region public\n  public async findMany(criteria: IFindManyCriteria): Promise<MusicEntity[]> {\n    return this.repo.find({ where: { user: { id: criteria.user.id } } });\n  }\n\n  public async findById(id: number): Promise<MusicEntity | undefined> {\n    return this.repo.findOne(id);\n  }\n\n  public async create(music: DeepPartial<MusicEntity>): Promise<MusicEntity> {\n    return this.repo.create(music).save();\n  }\n\n  public async clear(): Promise<void> {\n    await this.getRepo(MusicPlayingRepository).deleteAll();\n    await this.repo.deleteAll();\n  }\n  //#endregion\n}\n\nexport interface IFindManyCriteria {\n  user: {\n    id: number;\n  };\n}\n"]}