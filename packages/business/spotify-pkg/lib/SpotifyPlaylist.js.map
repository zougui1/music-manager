{"version":3,"file":"SpotifyPlaylist.js","sourceRoot":"","sources":["../src/SpotifyPlaylist.ts"],"names":[],"mappings":";;;AAEA,6CAA0C;AAC1C,iDAA8C;AAE9C,mCAA8D;AAE9D,MAAa,eAAe;IAO1B,YAAY,IAAsB;QALlC,WAAM,GAAmB,EAAE,CAAC;QAG5B,QAAG,GAAG,IAAI,uBAAU,EAAE,CAAC;QAGrB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC;QACpB,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC;IACpB,CAAC;IAED,gBAAgB;IAChB,KAAK,CAAC,aAAa;QACjB,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QACzD,MAAM,MAAM,GAAsB,EAAE,CAAC;QACrC,IAAI,CAAC,GAAG,CAAC,CAAC;QAEV,KAAK,MAAM,KAAK,IAAI,QAAQ,CAAC,MAAM,EAAE;YACnC,IAAI,CAAC,EAAE,KAAK,CAAC,EAAE;gBACb,SAAS;aACV;YAED,MAAM,SAAS,GAAG,uBAAe,CAAC,0BAAkB,CAAC,KAAK,CAAC,CAAC,CAAC;YAE7D,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;YAClB,wBAAwB;YACxB,IAAI,CAAC,SAAS,EAAE;gBACd,MAAM,IAAI,KAAK,CAAC,aAAa,CAAC,CAAC;aAChC;YAED,MAAM,YAAY,GAAG,IAAI,2BAAY,CAAC,SAAS,CAAC,CAAC;YACjD,MAAM,CAAC,IAAI,CAAC,MAAM,YAAY,CAAC,aAAa,EAAE,CAAC,CAAC;SACjD;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;CAEF;AAtCD,0CAsCC","sourcesContent":["import { DownloadedAudio, Downloader } from 'types-pkg';\n\nimport { SpotifyApi } from './SpotifyApi';\nimport { SpotifyTrack } from './SpotifyTrack';\nimport { ParsedSpotifyUrl } from './types';\nimport { parseSpotifyUrl, getSpotifyTrackUrl } from './utils';\n\nexport class SpotifyPlaylist implements Downloader {\n\n  tracks: SpotifyTrack[] = [];\n  url: string;\n  id: string;\n  api = new SpotifyApi();\n\n  constructor(data: ParsedSpotifyUrl) {\n    this.url = data.url;\n    this.id = data.id;\n  }\n\n  //#region public\n  async downloadAudio(): Promise<DownloadedAudio[]> {\n    const playlist = await this.api.extractPlaylist(this.id);\n    const tracks: DownloadedAudio[] = [];\n    let i = 0;\n\n    for (const track of playlist.tracks) {\n      if (i++ !== 3) {\n        continue;\n      }\n\n      const parsedUrl = parseSpotifyUrl(getSpotifyTrackUrl(track));\n\n      console.log(track)\n      // TODO handle correctly\n      if (!parsedUrl) {\n        throw new Error('Invalid URL');\n      }\n\n      const spotifyTrack = new SpotifyTrack(parsedUrl);\n      tracks.push(await spotifyTrack.downloadAudio());\n    }\n\n    return tracks;\n  }\n  //#endregion\n}\n"]}