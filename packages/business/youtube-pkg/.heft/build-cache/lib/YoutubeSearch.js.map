{"version":3,"file":"YoutubeSearch.js","sourceRoot":"","sources":["../src/YoutubeSearch.ts"],"names":[],"mappings":";;;;;;AAAA,0DAAkG;AAElG,iDAA8C;AAC9C,+DAA4D;AAG5D,MAAM,cAAc,GAAG,qBAAqB,CAAC;AAC7C,MAAM,yBAAyB,GAAG,EAAE,CAAC;AAErC,MAAa,aAAa;IAExB,gBAAgB;IAChB,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,MAAqD;QAC9E,MAAM,MAAM,GAAG,MAAM,mBAAa,CAAC,MAAM,CAAC,CAAC;QAC3C,MAAM,CAAC,SAAS,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC;QAClC,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAA;QAE5C,OAAO,WAAW,CAAC;IACrB,CAAC;IAED,MAAM,CAAC,KAAK,CAAC,UAAU,CAAC,MAAqD;QAC3E,MAAM,MAAM,GAAG,MAAM,mBAAa,CAAC,MAAM,CAAC,CAAC;QAC3C,MAAM,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;YACpD,KAAK,CAAC,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;YACjC,OAAO,KAAK,CAAC;QACf,CAAC,CAAC,CAAC;QAEH,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,MAAM,CAAC,KAAK,CAAC,oBAAoB,CAAC,SAA0B;QAC1D,IAAI,gBAAgB,GAAmC,SAAS,CAAC;QAEjE,KAAK,MAAM,MAAM,IAAI,SAAS,CAAC,OAAO,EAAE;YACtC,MAAM,WAAW,GAAG,MAAM,IAAI,CAAC,UAAU,CAAC,GAAG,MAAM,CAAC,IAAI,IAAI,SAAS,CAAC,KAAK,EAAE,CAAC,CAAC;YAC/E,MAAM,gBAAgB,GAAG;gBACvB,KAAK,EAAE,SAAS,CAAC,KAAK;gBACtB,KAAK,EAAE,SAAS,CAAC,KAAK;gBACtB,QAAQ,EAAE,SAAS,CAAC,QAAQ;gBAC5B,MAAM;aACP,CAAC;YAEF,MAAM,MAAM,GAAG,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,2BAAY,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;YAC7D,MAAM,iBAAiB,GAAG,MAAM,yCAAmB,CAAC,MAAM,EAAE,gBAAgB,CAAC,CAAC;YAC9E,gBAAgB,GAAG,iBAAiB,CAAC;YAErC,IAAI,iBAAiB,CAAC,WAAW,IAAI,yBAAyB,EAAE;gBAC9D,gBAAgB,GAAG,iBAAiB,CAAC;gBACrC,MAAM;aACP;YAED,IAAI,iBAAiB,CAAC,WAAW,GAAG,gBAAgB,CAAC,WAAW,EAAE;gBAChE,gBAAgB,GAAG,iBAAiB,CAAC;aACtC;SACF;QAED,OAAO,gBAAgB,CAAC;IAC1B,CAAC;IACD,YAAY;IAEZ,iBAAiB;IACT,MAAM,CAAC,QAAQ,CAAC,SAA4B;QAClD,OAAO,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,cAAc,CAAC;YAC3C,CAAC,CAAC,SAAS,CAAC,GAAG;YACf,CAAC,CAAC,cAAc,GAAG,SAAS,CAAC,GAAG,CAAC;IACrC,CAAC;CAEF;AA1DD,sCA0DC","sourcesContent":["import youtubeSearch, { VideoSearchResult, OptionsWithQuery, OptionsWithSearch } from 'yt-search';\n\nimport { YoutubeVideo } from './YoutubeVideo';\nimport { getMostCorrectVideo } from './getMostCorrectVideo';\nimport { SearchCriterias, TestedYoutubeVideo } from './types';\n\nconst youtubeBaseUrl = 'https://youtube.com';\nconst MINIMUM_VIDEO_CORRECTNESS = 50;\n\nexport class YoutubeSearch {\n\n  //#region public\n  static async findVideoLink(search: string | OptionsWithQuery | OptionsWithSearch): Promise<string | undefined> {\n    const result = await youtubeSearch(search);\n    const [topResult] = result.videos;\n    const youtubeLink = this.buildUrl(topResult)\n\n    return youtubeLink;\n  }\n\n  static async findVideos(search: string | OptionsWithQuery | OptionsWithSearch): Promise<VideoSearchResult[]> {\n    const result = await youtubeSearch(search);\n    const videos = result.videos.slice(0, 10).map(video => {\n      video.url = this.buildUrl(video);\n      return video;\n    });\n\n    return videos;\n  }\n\n  static async findMostCorrectVideo(criterias: SearchCriterias): Promise<TestedYoutubeVideo | undefined> {\n    let mostCorrectVideo: TestedYoutubeVideo | undefined = undefined;\n\n    for (const artist of criterias.artists) {\n      const foundVideos = await this.findVideos(`${artist.name} ${criterias.title}`);\n      const currentCriterias = {\n        album: criterias.album,\n        title: criterias.title,\n        duration: criterias.duration,\n        artist,\n      };\n\n      const videos = foundVideos.map(v => new YoutubeVideo(v.url));\n      const _mostCorrectVideo = await getMostCorrectVideo(videos, currentCriterias);\n      mostCorrectVideo = _mostCorrectVideo;\n\n      if (_mostCorrectVideo.correctness >= MINIMUM_VIDEO_CORRECTNESS) {\n        mostCorrectVideo = _mostCorrectVideo;\n        break;\n      }\n\n      if (_mostCorrectVideo.correctness > mostCorrectVideo.correctness) {\n        mostCorrectVideo = _mostCorrectVideo;\n      }\n    }\n\n    return mostCorrectVideo;\n  }\n  //#endregion\n\n  //#region private\n  private static buildUrl(topResult: VideoSearchResult): string {\n    return topResult.url.includes(youtubeBaseUrl)\n      ? topResult.url\n      : youtubeBaseUrl + topResult.url;\n  }\n  //#endregion\n}\n"]}